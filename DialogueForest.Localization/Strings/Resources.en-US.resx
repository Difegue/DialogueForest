<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>DialogueForest</value>
    <comment>Application display name</comment>
  </data>
  <data name="NavigationNew" xml:space="preserve">
    <value>New Forest</value>
    <comment>Navigation view item name for NowPlaying</comment>
  </data>
  <data name="NavigationSave" xml:space="preserve">
    <value>Save</value>
    <comment>Navigation view item name for Library</comment>
  </data>
  <data name="NavigationExport" xml:space="preserve">
    <value>Export</value>
    <comment>Navigation view item name for Folders</comment>
  </data>
  <data name="NavigationFile" xml:space="preserve">
    <value>Start</value>
    <comment>Navigation view item name for Playlists</comment>
  </data>
  <data name="NavigationSettings" xml:space="preserve">
    <value>Settings</value>
    <comment>Navigation view item name for Settings</comment>
  </data>
  <data name="NavigationPins" xml:space="preserve">
    <value>My Pins</value>
  </data>
  <data name="NavigationTrash" xml:space="preserve">
    <value>Trash</value>
  </data>
  <data name="ContentDialogDeleteDialogue" xml:space="preserve">
    <value>Delete this Text?</value>
  </data>
  <data name="ContentDialogDeleteReply" xml:space="preserve">
    <value>Delete this Reply?</value>
  </data>
  <data name="ContentDialogueDeleteNode" xml:space="preserve">
    <value>Delete this Dialogue?</value>
  </data>
  <data name="TreeNameDialogTitle" xml:space="preserve">
    <value>New Dialogue Tree</value>
  </data>
  <data name="TreeNameDialogText" xml:space="preserve">
    <value>Give a name to your freshly planted Tree! 
You can always change this later.</value>
  </data>
  <data name="TreeNameDialogPlaceholder" xml:space="preserve">
    <value>My Orange Tree</value>
  </data>
  <data name="TreeNameDialogDefaultName" xml:space="preserve">
    <value>New Tree</value>
  </data>
  <data name="ButtonCancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ButtonCreateText" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="WelcomeWhatsNew" xml:space="preserve">
    <value>What's New</value>
  </data>
  <data name="SearchTreePlaceholderText" xml:space="preserve">
    <value>Search Nodes...</value>
  </data>
  <data name="ButtonOKText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ExceptionSettingsStorageExtensionsFileNameIsNullOrEmpty" xml:space="preserve">
    <value>File name is null or empty. Specify a valid file name</value>
    <comment>File name is null or empty to save file in settings storage extensions</comment>
  </data>
  <data name="SettingsCharactersText" xml:space="preserve">
    <value>These will appear as quick presets in your Dialogue Nodes.</value>
    <comment>Value must be an Enum in enum to boolean converter</comment>
  </data>
  <data name="SettingsCharactersHeader" xml:space="preserve">
    <value>Pre-defined Characters</value>
    <comment>Parameter must be an Enum name in enum to boolean converter</comment>
  </data>
  <data name="ExceptionViewLifeTimeControlViewDisposal" xml:space="preserve">
    <value>This view is being disposed.</value>
    <comment>View disposed</comment>
  </data>
  <data name="ExceptionViewLifeTimeControlMissingReleasedSubscription" xml:space="preserve">
    <value>All pages opened in a new window must subscribe to the Released Event.</value>
    <comment>The page is not subscribed to the Released event.</comment>
  </data>
  <data name="ContentDialogWillBePermaDeleted" xml:space="preserve">
    <value>It will be permanently deleted!</value>
  </data>
  <data name="NotificationExportSuccess" xml:space="preserve">
    <value>Exported Successfully!</value>
  </data>
  <data name="NotificationExportFailed" xml:space="preserve">
    <value>Export Failed! See the below notification for details.</value>
  </data>
  <data name="WelcomeGreetingMorning" xml:space="preserve">
    <value>Good Morning</value>
  </data>
  <data name="SettingsThemeDark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="ErrorGeneric" xml:space="preserve">
    <value>Error: {0}</value>
  </data>
  <data name="SettingsTheme" xml:space="preserve">
    <value>Application Theme</value>
  </data>
  <data name="WelcomeGreetingNight" xml:space="preserve">
    <value>Good Night</value>
  </data>
  <data name="TreeViewDeleteTree" xml:space="preserve">
    <value>Delete Tree</value>
  </data>
  <data name="SettingsAbout" xml:space="preserve">
    <value>About this application</value>
  </data>
  <data name="SettingsAboutText" xml:space="preserve">
    <value>An opinionated Dialogue Writer for Games.</value>
  </data>
  <data name="SettingsAnalytics" xml:space="preserve">
    <value>Analytics</value>
  </data>
  <data name="SettingsAnalyticsText" xml:space="preserve">
    <value>Allow DialogueForest to send crash and analytics reports</value>
  </data>
  <data name="SettingsApplyOnRestart" xml:space="preserve">
    <value>This setting will apply after restarting the app.</value>
  </data>
  <data name="SettingsForest" xml:space="preserve">
    <value>Current Dialogue Forest</value>
  </data>
  <data name="SettingsMetadataHeader" xml:space="preserve">
    <value>Custom Properties</value>
  </data>
  <data name="SettingsCustomization" xml:space="preserve">
    <value>Personalization</value>
  </data>
  <data name="SettingsDatabase" xml:space="preserve">
    <value>Database and Album Art</value>
  </data>
  <data name="SettingsGithub" xml:space="preserve">
    <value>Source Code, License and Privacy Statement</value>
  </data>
  <data name="SettingsGithubLink" xml:space="preserve">
    <value>https://github.com/Difegue/DialogueForest</value>
  </data>
  <data name="SettingsMetadataText" xml:space="preserve">
    <value>Property fields will appear on every Dialogue Node for you to input additional information.</value>
  </data>
  <data name="SettingsMetadataKey" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="SettingsMetadataTypeString" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="SettingsMetadataTypeBool" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="SettingsMetadataTypeColor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="SettingsThemeDefault" xml:space="preserve">
    <value>System default</value>
  </data>
  <data name="SettingsThemeLight" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="SettingsUIDensity" xml:space="preserve">
    <value>UI Density</value>
  </data>
  <data name="SettingsUIDensityCompact" xml:space="preserve">
    <value>Compact</value>
  </data>
  <data name="SettingsUIDensityNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="SettingsMetadataTypeEnum" xml:space="preserve">
    <value>Preexisting values</value>
  </data>
  <data name="SearchPlaceholderText" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="WelcomeNewButton" xml:space="preserve">
    <value>Create a New Forest</value>
  </data>
  <data name="WelcomeOpenButton" xml:space="preserve">
    <value>Open existing Forest</value>
  </data>
  <data name="SearchPinsPlaceholderText" xml:space="preserve">
    <value>Search Pins...</value>
  </data>
  <data name="FirstRunText" xml:space="preserve">
    <value>To get started, create a new Dialogue Tree using the "New Tree" button on the left, and then start adding Nodes to it!

You can also pin any node by right-clicking it to find it quickly in "My Pins", and use "Notes" to draft dialogue to be later inserted into a Tree.

Keep in mind DialogueForest can send usage data to help diagnose bugs. 
If you're not okay with this, you can disable telemetry in the Settings page that'll open once you close this popup.
Hope you enjoy using this silly writing app!  </value>
    <comment>First use prompt message body</comment>
  </data>
  <data name="FirstRunTitle" xml:space="preserve">
    <value>Welcome to DialogueForest!</value>
    <comment>First use prompt message title</comment>
  </data>
  <data name="ContextMenuLinksTo" xml:space="preserve">
    <value>Links To</value>
  </data>
  <data name="ContextMenuLinkedBy" xml:space="preserve">
    <value>Linked By</value>
  </data>
  <data name="ContextMenuPin" xml:space="preserve">
    <value>Pin</value>
  </data>
  <data name="ContextMenuUnpin" xml:space="preserve">
    <value>Unpin</value>
  </data>
  <data name="ContextMenuTrash" xml:space="preserve">
    <value>Move to Trash</value>
  </data>
  <data name="ContextMenuDelete" xml:space="preserve">
    <value>Delete permanently</value>
  </data>
  <data name="ContextMenuMove" xml:space="preserve">
    <value>Move to another Tree</value>
  </data>
  <data name="EmptyViewDocumentsTitle" xml:space="preserve">
    <value>Let's get writing!</value>
  </data>
  <data name="EmptyViewDocumentsDesc" xml:space="preserve">
    <value>Your Dialogue Nodes will show up here. 
You can create Nodes in the Dialogue Trees on the left side.</value>
  </data>
  <data name="EmptyViewTreeTitle" xml:space="preserve">
    <value>No Talkin' yet.</value>
  </data>
  <data name="EmptyViewTreeDesc" xml:space="preserve">
    <value>Your Dialogue will show up here.
Click on the "+" button to add some!</value>
  </data>
  <data name="EmptyViewNotesTitle" xml:space="preserve">
    <value>You have no Notes.</value>
  </data>
  <data name="EmptyViewNotesDesc" xml:space="preserve">
    <value>Notes are pieces of dialogue that aren't 
included in your final Export. 
Use them to store ideas or drafts!</value>
  </data>
  <data name="EmptyViewPinsTitle" xml:space="preserve">
    <value>Nothing on the pinboard.</value>
  </data>
  <data name="EmptyViewTrashTitle" xml:space="preserve">
    <value>Nothing's trashed...yet.</value>
  </data>
  <data name="EmptyViewPinsDesc" xml:space="preserve">
    <value>You can pin Dialogue Nodes to find them again easily!
They'll show up here when you do.</value>
  </data>
  <data name="NavigationNewTree" xml:space="preserve">
    <value>New Tree</value>
  </data>
  <data name="EditorBold" xml:space="preserve">
    <value>Bold</value>
  </data>
  <data name="EditorItalic" xml:space="preserve">
    <value>Italic</value>
  </data>
  <data name="EditorUnderline" xml:space="preserve">
    <value>Underline</value>
  </data>
  <data name="EditorFontColor" xml:space="preserve">
    <value>Text Color</value>
  </data>
  <data name="EditorDeleteDialogue" xml:space="preserve">
    <value>Delete Dialogue portion</value>
  </data>
  <data name="EditorPlaceholderText" xml:space="preserve">
    <value>Accusam consetetur ut accusam et gubergren augue diam enim dolor at nulla ea ipsum diam et lobortis. Et no rebum odio takimata nulla nisl takimata iriure sit aliquyam eirmod nulla sit. Magna justo consetetur takimata.</value>
  </data>
  <data name="EditorReplyLinkedTo" xml:space="preserve">
    <value>Linked to:</value>
  </data>
  <data name="EditorReplyGoToLinked" xml:space="preserve">
    <value>Go to linked Dialogue</value>
  </data>
  <data name="EditorDeleteReply" xml:space="preserve">
    <value>Delete Reply</value>
  </data>
  <data name="EditorShowInTree" xml:space="preserve">
    <value>Show in Tree</value>
  </data>
  <data name="EditorHeaderDialogue" xml:space="preserve">
    <value>Dialogue</value>
  </data>
  <data name="EditorHeaderReply" xml:space="preserve">
    <value>Prompts</value>
  </data>
  <data name="EditorAddDialogue" xml:space="preserve">
    <value>Add a piece of Dialogue</value>
  </data>
  <data name="EditorAddReply" xml:space="preserve">
    <value>Add a reply Prompt</value>
  </data>
  <data name="EditorHeaderMetadata" xml:space="preserve">
    <value>Custom Properties</value>
  </data>
  <data name="EditorUnsavedChanges" xml:space="preserve">
    <value>You have unsaved changes</value>
  </data>
  <data name="EditorEmptyReplies" xml:space="preserve">
    <value>Replies to this dialogue will show up here, if you add any.</value>
  </data>
  <data name="EditorReplyPlaceholderText" xml:space="preserve">
    <value>Magna ea feugiat labore diam diam assum amet nibh vero sea eirmod magna takimata eum illum. Labore et nonumy vulputate lorem zzril erat kasd eu no sed laoreet duo labore et diam eos.</value>
  </data>
  <data name="SettingsMetadataType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WelcomeGreetingEvening" xml:space="preserve">
    <value>Good Evening</value>
  </data>
  <data name="OffText" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="OnText" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="WelcomeGreetingAfternoon" xml:space="preserve">
    <value>Good Afternoon</value>
  </data>
  <data name="NavigationNotes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="RateAppPromptTitle" xml:space="preserve">
    <value>Rate the Application</value>
  </data>
  <data name="RateAppPromptText" xml:space="preserve">
    <value>Thanks for using DialogueForest! Would you like to rate the app on the Store? 
(We won't ask again. 🙏)</value>
  </data>
  <data name="ButtonYesText" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ButtonNoText" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NavigationOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="TreeViewAddNode" xml:space="preserve">
    <value>Add Dialogue Node</value>
  </data>
  <data name="WelcomeFlavorText" xml:space="preserve">
    <value>"I’m always worrying 'I used to be able to write for six hours straight, but now I can’t concentrate after three hours. Is my productive power going down?' But seeing the people who have been at it ten years longer than me still creating amazing things proves to me that I can keep going another ten years." 
- Kinoko Nasu</value>
  </data>
  <data name="TreeViewToggleButton" xml:space="preserve">
    <value>Toggle Tree View</value>
  </data>
  <data name="TreeViewSortBy" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="ButtonDeleteText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="NavigationTrees" xml:space="preserve">
    <value>Dialogue Trees</value>
  </data>
  <data name="EditorEmptyMetadata1" xml:space="preserve">
    <value>If you define custom metadata keys in</value>
  </data>
  <data name="EditorEmptyMetadata2" xml:space="preserve">
    <value>, you will be able to set values for them here.</value>
  </data>
  <data name="EmptyViewTrashDesc" xml:space="preserve">
    <value>Deleted Dialogue Nodes will end up here.</value>
  </data>
  <data name="WelcomeSaveAs" xml:space="preserve">
    <value>Save As...</value>
  </data>
  <data name="ExportConversionParameter" xml:space="preserve">
    <value>Text Format</value>
  </data>
  <data name="ExportConversionDesc" xml:space="preserve">
    <value>Choose which format your Dialogue text will be exported as.</value>
  </data>
  <data name="ExportFileLocation" xml:space="preserve">
    <value>JSON Export Location</value>
  </data>
  <data name="ButtonFileText" xml:space="preserve">
    <value>Pick a File...</value>
  </data>
  <data name="ExportActionButtonText" xml:space="preserve">
    <value>Export All Dialogue</value>
  </data>
  <data name="ButtonFolderText" xml:space="preserve">
    <value>Pick a Folder...</value>
  </data>
  <data name="ExportSeparateFilesTitle" xml:space="preserve">
    <value>Create separate JSON files</value>
  </data>
  <data name="ExportSeparateFilesDesc" xml:space="preserve">
    <value>If enabled, we'll export a separate JSON for each Dialogue Tree.</value>
  </data>
  <data name="ExportOperationInProgress" xml:space="preserve">
    <value>Exporting... Please wait warmly.</value>
  </data>
  <data name="NoNodesText" xml:space="preserve">
    <value>No Nodes</value>
  </data>
  <data name="ContentDialogDeleteTree" xml:space="preserve">
    <value>Delete this Tree?</value>
  </data>
  <data name="ContentDialogDeleteTreeDesc" xml:space="preserve">
    <value>All its nodes will be moved to Trash.</value>
  </data>
  <data name="NotificationPinned" xml:space="preserve">
    <value>Pinned!</value>
  </data>
  <data name="NotificationUnpinned" xml:space="preserve">
    <value>Unpinned!</value>
  </data>
  <data name="NotificationTrashed" xml:space="preserve">
    <value>Trashed!</value>
  </data>
  <data name="EditorCharacterPlaceholder" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="SettingsMetadataDelete" xml:space="preserve">
    <value>Remove custom property</value>
  </data>
  <data name="SettingsCharacterAdd" xml:space="preserve">
    <value>Add character</value>
  </data>
  <data name="SettingsMetadataAdd" xml:space="preserve">
    <value>Add property</value>
  </data>
  <data name="SettingsCharacterDelete" xml:space="preserve">
    <value>Remove character</value>
  </data>
  <data name="CountWords" xml:space="preserve">
    <value>{0} words</value>
  </data>
  <data name="CountDialogues" xml:space="preserve">
    <value>{0} dialogues</value>
  </data>
  <data name="SettingsWordHeader" xml:space="preserve">
    <value>Daily objective &amp; Reminders</value>
  </data>
  <data name="SettingsWordTrack" xml:space="preserve">
    <value>Track word count</value>
  </data>
  <data name="SettingsWordDesc" xml:space="preserve">
    <value>Set a daily goal to encourage writing.</value>
  </data>
  <data name="SettingsWordObjective" xml:space="preserve">
    <value>Daily word objective</value>
  </data>
  <data name="SettingsNotification" xml:space="preserve">
    <value>Daily reminder</value>
  </data>
  <data name="SettingsNotificationDesc" xml:space="preserve">
    <value>Sends one notification each day to remind you to open the app.</value>
  </data>
  <data name="SettingsNotificationSendAt" xml:space="preserve">
    <value>Send at:</value>
  </data>
  <data name="DailyObjectiveStreakTitle" xml:space="preserve">
    <value>✨ A {0}-day streak!</value>
  </data>
  <data name="DailyObjectiveStreakDesc" xml:space="preserve">
    <value>Good job on meeting your goal for today!</value>
  </data>
  <data name="DailyNotificationDesc" xml:space="preserve">
    <value>Let's try to write {0} words today!</value>
  </data>
  <data name="DailyNotificationTitle" xml:space="preserve">
    <value>Time to write some dialogue</value>
  </data>
  <data name="DailyNotificationDescNoTrack" xml:space="preserve">
    <value>Open DialogueForest to pen your story!</value>
  </data>
  <data name="ContentDialogUnsavedChanges" xml:space="preserve">
    <value>There are unsaved changes</value>
  </data>
  <data name="ContentDialogUnsavedChangesText" xml:space="preserve">
    <value>The current forest hasn't been saved to disk. Do you want to proceed? 
Your changes will be lost.</value>
  </data>
  <data name="EditorReplyCreateLinked" xml:space="preserve">
    <value>Create and link new Dialogue</value>
  </data>
  <data name="TreeViewEmptyTrash" xml:space="preserve">
    <value>Empty Trash</value>
  </data>
  <data name="ContentDialogEmptyTrash" xml:space="preserve">
    <value>Empty trash?</value>
  </data>
  <data name="ContentDialogEmptyTrashDesc" xml:space="preserve">
    <value>Every node will be permanently deleted.</value>
  </data>
  <data name="NotificationTrashEmptied" xml:space="preserve">
    <value>Trash has been emptied.</value>
  </data>
  <data name="ContentDialogOldAutosave" xml:space="preserve">
    <value>Version on disk is more recent</value>
  </data>
  <data name="ContentDialogOldAutosaveDesc" xml:space="preserve">
    <value>The file saved to disk at "{0}" seems to be more recent than the autosave. 
Would you like to reload the file from disk?</value>
  </data>
  <data name="WelcomeTotalDialogueCount" xml:space="preserve">
    <value>{0} Dialogue nodes</value>
  </data>
  <data name="WelcomeTotalWordCount" xml:space="preserve">
    <value>{0} Total words</value>
  </data>
  <data name="WelcomeDeletedCount" xml:space="preserve">
    <value>{0} Deleted nodes</value>
  </data>
</root>