<Page x:Class="DialogueForest.Views.DialogueNodePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:converters="using:DialogueForest.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:local="using:DialogueForest.Controls"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      xmlns:strings="using:DialogueForest.Localization.Strings"
      xmlns:toolkit="using:CommunityToolkit.WinUI.Converters"
      xmlns:viewmodels="using:DialogueForest.Core.ViewModels"
      xmlns:views="using:DialogueForest.Views"
      mc:Ignorable="d">

    <Page.Resources>

        <Style x:Key="ListViewItemStretchStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <converters:BoolMetadataConverter x:Key="BoolMetadataConverter" />
        <converters:ColorMetadataConverter x:Key="ColorMetadataConverter" />
        <converters:StringMetadataConverter x:Key="StringMetadataConverter" />

        <toolkit:StringFormatConverter x:Key="CharacterNameConverter" />

        <Style x:Key="ColorPickerStyle" TargetType="controls:ColorPicker">
            <Setter Property="ColorSpectrumShape" Value="Ring" />
            <Setter Property="IsAlphaEnabled" Value="False" />
            <Setter Property="IsHexInputVisible" Value="True" />
        </Style>

        <Style x:Key="CharacterAutoSuggestBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="8,0,0,0" />
        </Style>

        <DataTemplate x:Key="DialogPartTemplate" x:DataType="viewmodels:DialoguePartViewModel">
            <Grid>
                <!--  ui:FrameworkElementExtensions.Cursor="IBeam" is unavailable on toolkit v8 + WASDK for now  -->
                <Grid Margin="0,1" Style="{StaticResource CardGrid}" Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  &#10240; is a braille blank character to break the converter's not-useful-here trimming behavior  -->
                    <TextBlock Grid.Column="0" Style="{StaticResource BaseTextBlockStyle}" Text="{x:Bind CharacterName, Mode=OneWay, Converter={StaticResource CharacterNameConverter}, ConverterParameter=' {0} :&#10240;'}" />

                    <local:BindableRichEditBox Grid.Column="1" Padding="0"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               IsHitTestVisible="False"
                                               RtfText="{x:Bind RtfDialogueText,
                                                                Mode=OneWay}"
                                               TextWrapping="Wrap" />
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="PointerEntered">
                            <ic:ChangePropertyAction PropertyName="Background" Value="{ThemeResource ControlStrongFillColorDisabledBrush}" />
                        </ic:EventTriggerBehavior>
                        <ic:EventTriggerBehavior EventName="PointerExited">
                            <ic:ChangePropertyAction PropertyName="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
                        </ic:EventTriggerBehavior>
                        <ic:EventTriggerBehavior EventName="Tapped">
                            <!--  This breaks with Trimming  -->
                            <ic:InvokeCommandAction Command="{x:Bind ActivateCommand}" />
                        </ic:EventTriggerBehavior>
                        <ic:EventTriggerBehavior EventName="GotFocus">
                            <ic:InvokeCommandAction Command="{x:Bind ActivateCommand}" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Grid>

                <StackPanel Margin="0,2" Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">

                    <Grid Height="40"
                          HorizontalAlignment="Stretch"
                          Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                          BorderBrush="{ThemeResource ControlStrokeColorDefault}"
                          BorderThickness="1,1,1,0"
                          CornerRadius="4,4,0,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="240" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="240" />
                        </Grid.ColumnDefinitions>

                        <StackPanel x:Name="EditorControls"
                                    Grid.Column="0"
                                    Margin="{StaticResource SmallLeftMargin}"
                                    Orientation="Horizontal"
                                    Spacing="8">
                            <ToggleButton x:Name="Bold"
                                          Click="Toggle_Bold"
                                          Tag="{Binding ElementName=Editor}"
                                          ToolTipService.ToolTip="{x:Bind strings:Resources.EditorBold}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="14" Glyph="&#xE8DD;" />
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton x:Name="Italic"
                                          Click="Toggle_Italic"
                                          Tag="{Binding ElementName=Editor}"
                                          ToolTipService.ToolTip="{x:Bind strings:Resources.EditorItalic}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="14" Glyph="&#xE8DB;" />
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton x:Name="Underline"
                                          Click="Toggle_Underline"
                                          Tag="{Binding ElementName=Editor}"
                                          ToolTipService.ToolTip="{x:Bind strings:Resources.EditorUnderline}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="14" Glyph="&#xE19A;" />
                                </ToggleButton.Content>
                            </ToggleButton>

                            <AppBarSeparator />

                            <!--  This breaks with Trimming  -->
                            <controls:ColorPickerButton x:Name="Color"
                                                        Height="28"
                                                        Click="ColorPicker_Click"
                                                        ColorPickerStyle="{StaticResource ColorPickerStyle}"
                                                        CornerRadius="{ThemeResource ControlCornerRadius}"
                                                        Tag="{Binding ElementName=Editor}"
                                                        ToolTipService.ToolTip="{x:Bind strings:Resources.EditorFontColor}" />

                        </StackPanel>

                        <StackPanel Grid.Column="2"
                                    Margin="{StaticResource SmallRightMargin}"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    Spacing="8">

                            <AutoSuggestBox Width="160" Height="27"
                                            Margin="0,5,0,0"
                                            VerticalAlignment="Top"
                                            IsTabStop="False"
                                            ItemsSource="{x:Bind Characters}"
                                            PlaceholderText="{x:Bind strings:Resources.EditorCharacterPlaceholder}"
                                            Text="{x:Bind CharacterName,
                                                          Mode=TwoWay}"
                                            TextBoxStyle="{StaticResource CharacterAutoSuggestBoxStyle}">
                                <AutoSuggestBox.Resources>
                                    <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                                </AutoSuggestBox.Resources>
                            </AutoSuggestBox>

                            <Button Height="28"
                                    Command="{x:Bind RemoveCommand}"
                                    IsEnabled="{x:Bind ParentHasMultipleDialogs,
                                                       Mode=OneWay}"
                                    ToolTipService.ToolTip="{x:Bind strings:Resources.EditorDeleteDialogue}">
                                <Button.Content>
                                    <FontIcon FontFamily="Segoe Fluent Icons"
                                              FontSize="14"
                                              Foreground="{ThemeResource DestructiveActionForeground}"
                                              Glyph="&#xE107;" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <local:BindableRichEditBox x:Name="Editor"
                                               Height="180"
                                               CornerRadius="0,0,4,4"
                                               IsFocused="{x:Bind IsActive,
                                                                  Mode=OneWay}"
                                               PlaceholderText="{x:Bind strings:Resources.EditorPlaceholderText}"
                                               RtfText="{x:Bind RtfDialogueText,
                                                                Mode=TwoWay}"
                                               SelectionChanged="Selection_Changed"
                                               SelectionFlyout="{x:Null}"
                                               Tag="{Binding ElementName=EditorControls}"
                                               TextChanged="Selection_Changed" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DialogPromptTemplate" x:DataType="viewmodels:ReplyPromptViewModel">
            <Grid Style="{StaticResource CardGrid}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.9*" />
                    <ColumnDefinition Width="120" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0"
                         Margin="0,0,16,0"
                         AcceptsReturn="True"
                         Background="Transparent"
                         BorderThickness="0"
                         PlaceholderText="{x:Bind strings:Resources.EditorReplyPlaceholderText}"
                         Text="{x:Bind ReplyText,
                                       Mode=TwoWay}"
                         TextWrapping="Wrap" />

                <StackPanel Grid.Column="1" Orientation="Vertical" Spacing="4">
                    <TextBlock Text="{x:Bind strings:Resources.EditorReplyLinkedTo}" />
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <!--  Due to Bindings.Update in the codebehind, we can't precompile the LinkedID binding.  -->
                        <ComboBox AllowDrop="True"
                                  DragOver="ComboBox_DragOver"
                                  Drop="ComboBox_Drop"
                                  IsEditable="True"
                                  ItemsSource="{x:Bind LinkableIDs,
                                                       Mode=OneWay}"
                                  SelectedItem="{Binding LinkedID,
                                                         Mode=TwoWay}" />
                        <Button Command="{x:Bind CreateNewLinkedDialogueCommand}" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorReplyCreateLinked}" Visibility="{x:Bind HasLinkedID, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                            <Button.Content>
                                <FontIcon FontFamily="Segoe Fluent Icons" FontSize="18" Glyph="&#xE710;" />
                            </Button.Content>
                        </Button>
                        <Button Margin="-8,0,0,0"
                                Command="{x:Bind GoToLinkedDialogueCommand}"
                                ToolTipService.ToolTip="{x:Bind strings:Resources.EditorReplyGoToLinked}"
                                Visibility="{x:Bind HasLinkedID,
                                                    Mode=OneWay,
                                                    Converter={StaticResource BoolToVisibilityConverter}}">
                            <Button.Content>
                                <FontIcon FontFamily="Segoe Fluent Icons" FontSize="18" Glyph="&#xF716;" />
                            </Button.Content>
                        </Button>
                    </StackPanel>

                    <Button Width="114"
                            Margin="{StaticResource XSmallTopMargin}"
                            Command="{x:Bind RemoveCommand}"
                            Content="{x:Bind strings:Resources.ButtonDeleteText}"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.EditorDeleteReply}" />

                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MetadataBoolTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl Title="{x:Bind Name}">

                <local:SettingsBlockControl.Icon>
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF19F;" />
                </local:SettingsBlockControl.Icon>

                <local:SettingsBlockControl.SettingsActionableElement>
                    <ToggleSwitch Margin="0,0,-112,0"
                                  IsOn="{x:Bind Value,
                                                Mode=TwoWay,
                                                Converter={StaticResource BoolMetadataConverter}}"
                                  OffContent="" OnContent="" />
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <DataTemplate x:Key="MetadataStringTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl Title="{x:Bind Name}" Icon="Tag">

                <local:SettingsBlockControl.SettingsActionableElement>
                    <TextBox Width="180" Text="{x:Bind Value, Mode=TwoWay, Converter={StaticResource StringMetadataConverter}}" />
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <DataTemplate x:Key="MetadataColorTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl Title="{x:Bind Name}">

                <local:SettingsBlockControl.Icon>
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE790;" />
                </local:SettingsBlockControl.Icon>

                <local:SettingsBlockControl.SettingsActionableElement>
                    <controls:ColorPickerButton ColorPickerStyle="{StaticResource ColorPickerStyle}" CornerRadius="{ThemeResource ControlCornerRadius}" SelectedColor="{x:Bind Value, Mode=TwoWay, Converter={StaticResource ColorMetadataConverter}}" />
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <views:MetadataTemplateSelector x:Key="MetadataTemplateSelector"
                                        MetadataBoolTemplate="{StaticResource MetadataBoolTemplate}"
                                        MetadataColorTemplate="{StaticResource MetadataColorTemplate}"
                                        MetadataStringTemplate="{StaticResource MetadataStringTemplate}" />
    </Page.Resources>

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="112" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="80" />
        </Grid.ColumnDefinitions>

        <StackPanel Margin="12,24,0,0" Spacing="4">

            <HyperlinkButton Margin="0,0,0,-8" Command="{x:Bind ViewModel.ShowInTreeCommand}" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorShowInTree}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <FontIcon FontFamily="Segoe Fluent Icons" FontSize="16" Glyph="&#xEC0A;" />
                    <TextBlock Text="{x:Bind ViewModel.TreeTitle, Mode=OneWay}" />
                </StackPanel>
            </HyperlinkButton>

            <TextBox Margin="{StaticResource MediumRightMargin}"
                     Background="Transparent"
                     BorderThickness="0"
                     FontFamily="Segoe UI Variable Display"
                     FontSize="32"
                     FontWeight="SemiBold"
                     Text="{x:Bind ViewModel.NodeTitle,
                                   Mode=TwoWay}" />
        </StackPanel>

        <AppBarButton Grid.Row="0" Grid.Column="1"
                      Margin="0,24,8,0"
                      IsCompact="True"
                      Label="{x:Bind ViewModel.ID,
                                     Mode=OneWay}">
            <AppBarButton.Icon>
                <FontIcon FontFamily="Segoe Fluent Icons" FontSize="16" Glyph="&#xE10C;" />
            </AppBarButton.Icon>
            <AppBarButton.Flyout>
                <MenuFlyout>
                    <MenuFlyoutSubItem x:Name="LinksToSubItem" Tag="links_to" Text="{x:Bind strings:Resources.ContextMenuLinksTo}">
                        <MenuFlyoutSubItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xEA54;" />
                        </MenuFlyoutSubItem.Icon>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSubItem x:Name="LinkedBySubItem" Tag="linked_by" Text="{x:Bind strings:Resources.ContextMenuLinkedBy}">
                        <MenuFlyoutSubItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE11F;" />
                        </MenuFlyoutSubItem.Icon>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutItem Command="{x:Bind ViewModel.PinDialogueCommand}" Text="{x:Bind strings:Resources.ContextMenuPin}" Visibility="{x:Bind ViewModel.IsPinned, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE141;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Command="{x:Bind ViewModel.UnpinDialogueCommand}" Text="{x:Bind strings:Resources.ContextMenuUnpin}" Visibility="{x:Bind ViewModel.IsPinned, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE196;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Command="{x:Bind ViewModel.MoveToTrashCommand}" Text="{x:Bind strings:Resources.ContextMenuTrash}" Visibility="{x:Bind ViewModel.IsTrashed, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Foreground="{ThemeResource DestructiveActionForeground}" Glyph="&#xE107;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Command="{x:Bind ViewModel.DeleteCommand}" Text="{x:Bind strings:Resources.ContextMenuDelete}" Visibility="{x:Bind ViewModel.IsTrashed, Converter={StaticResource BoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Foreground="{ThemeResource DestructiveActionForeground}" Glyph="&#xE621;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                </MenuFlyout>
            </AppBarButton.Flyout>

        </AppBarButton>

        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2">

            <StackPanel Margin="{StaticResource MediumLeftRightMargin}" Spacing="8">

                <controls:HeaderedContentControl Margin="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Margin="0,8" Orientation="Horizontal" Spacing="16">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Bind strings:Resources.EditorHeaderDialogue}" />
                            <Button Command="{x:Bind ViewModel.AddDialogCommand}" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorAddDialogue}">
                                <FontIcon FontFamily="Segoe Fluent Icons" FontSize="16" Glyph="&#xE109;" />
                            </Button>
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <ListView ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                              ItemTemplate="{StaticResource DialogPartTemplate}"
                              ItemsSource="{x:Bind ViewModel.Dialogs}"
                              SelectionMode="None"
                              TabNavigation="Local" />

                </controls:HeaderedContentControl>

                <controls:HeaderedContentControl Margin="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Margin="0,8" Orientation="Horizontal" Spacing="12">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Bind strings:Resources.EditorHeaderReply}" />
                            <Button Command="{x:Bind ViewModel.AddPromptCommand}" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorAddReply}">
                                <FontIcon FontFamily="Segoe Fluent Icons" FontSize="16" Glyph="&#xE109;" />
                            </Button>
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <Grid>
                        <ListView ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                                  ItemTemplate="{StaticResource DialogPromptTemplate}"
                                  ItemsSource="{x:Bind ViewModel.Prompts}"
                                  SelectionMode="None" />

                        <TextBlock Margin="{StaticResource SmallTopBottomMargin}"
                                   Text="{x:Bind strings:Resources.EditorEmptyReplies}"
                                   TextWrapping="Wrap"
                                   Visibility="{x:Bind ViewModel.IsPromptsEmpty,
                                                       Mode=OneWay,
                                                       Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>

                </controls:HeaderedContentControl>

                <controls:HeaderedContentControl Margin="6" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Margin="0,8" Orientation="Horizontal" Spacing="16">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Bind strings:Resources.EditorHeaderMetadata}" />
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <Grid>
                        <ListView ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                                  ItemTemplateSelector="{StaticResource MetadataTemplateSelector}"
                                  ItemsSource="{x:Bind ViewModel.MetaValues}"
                                  SelectionMode="None" />

                        <TextBlock Margin="{StaticResource SmallTopBottomMargin}" TextWrapping="Wrap" Visibility="{x:Bind ViewModel.IsMetaDataEmpty, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Run Text="{x:Bind strings:Resources.EditorEmptyMetadata1}" />
                            <Hyperlink>
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="Click">
                                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.OpenSettingsCommand}" />
                                    </ic:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Run Text="{x:Bind strings:Resources.NavigationSettings}" />
                            </Hyperlink>
                            <Run Text="{x:Bind strings:Resources.EditorEmptyMetadata2}" />
                        </TextBlock>
                    </Grid>

                </controls:HeaderedContentControl>

                <Border Height="64" />
            </StackPanel>

        </ScrollViewer>

    </Grid>
</Page>
