<Page
    x:Class="DialogueForest.Views.DialogueNodePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:strings="using:DialogueForest.Localization.Strings" 
    xmlns:local="using:DialogueForest.Controls"
    xmlns:views="using:DialogueForest.Views"
    xmlns:viewmodels="using:DialogueForest.Core.ViewModels"
    xmlns:converters="using:DialogueForest.Converters"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Converters"
    mc:Ignorable="d">

    <Page.Resources>

        <Style x:Key="ListViewItemStretchStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0,2" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <converters:BoolMetadataConverter x:Key="BoolMetadataConverter"/>
        <converters:ColorMetadataConverter x:Key="ColorMetadataConverter"/>
        <converters:StringMetadataConverter x:Key="StringMetadataConverter"/>

        <toolkit:StringFormatConverter x:Key="CharacterNameConverter"/>

        <Style x:Key="ColorPickerStyle" TargetType="controls:ColorPicker">
            <Setter Property="ColorSpectrumShape" Value="Ring"/>
            <Setter Property="IsAlphaEnabled" Value="False"/>
            <Setter Property="IsHexInputVisible" Value="True"/>
        </Style>

        <DataTemplate x:Key="DialogPartTemplate" x:DataType="viewmodels:DialoguePartViewModel">
            <Grid>
                <Grid Style="{StaticResource CardGrid}" ui:FrameworkElementExtensions.Cursor="IBeam" Margin="-1,1"
                      Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- &#10240; is a braille blank character to break the converter's not-useful-here trimming behavior -->
                    <TextBlock Text="{x:Bind CharacterName, Mode=OneWay, Converter={StaticResource CharacterNameConverter},
                                             ConverterParameter=' {0} :&#10240;'}" 
                               Style="{StaticResource BaseTextBlockStyle}"
                               Grid.Column="0" />

                    <local:BindableRichEditBox Background="Transparent" BorderThickness="0" IsHitTestVisible="False" 
                                               Padding="0" Grid.Column="1" 
                                               RtfText="{x:Bind RtfDialogueText, Mode=OneWay}" />
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="Tapped">
                            <ic:InvokeCommandAction Command="{x:Bind ActivateCommand}"></ic:InvokeCommandAction>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Grid>

                <StackPanel Margin="0,2" 
                            Visibility="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">

                    <Grid HorizontalAlignment="Stretch" Height="40" BorderBrush="{ThemeResource ControlStrokeColorDefault}"
                          BorderThickness="1,1,1,0" Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" CornerRadius="4,4,0,0" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="240"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="280"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel x:Name="EditorControls" Orientation="Horizontal" Spacing="8" Grid.Column="0" Margin="{StaticResource SmallLeftMargin}">
                            <ToggleButton x:Name="Bold" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorBold}"
                                          Click="Toggle_Bold" Tag="{Binding ElementName=Editor}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8DD;" FontSize="14"/>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton x:Name="Italic" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorItalic}"
                                          Click="Toggle_Italic" Tag="{Binding ElementName=Editor}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8DB;" FontSize="14"/>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ToggleButton x:Name="Underline" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorUnderline}"
                                          Click="Toggle_Underline" Tag="{Binding ElementName=Editor}">
                                <ToggleButton.Content>
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE19A;" FontSize="14"/>
                                </ToggleButton.Content>
                            </ToggleButton>

                            <AppBarSeparator />

                            <controls:ColorPickerButton x:Name="Color" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorFontColor}"
                                                        ColorPickerStyle="{StaticResource ColorPickerStyle}" Height="28"
                                                        CornerRadius="{ThemeResource ControlCornerRadius}"
                                                        Click="ColorPicker_Click" Tag="{Binding ElementName=Editor}"/>

                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Spacing="8" Grid.Column="2" HorizontalAlignment="Right" Margin="{StaticResource SmallRightMargin}">
                            <ComboBox PlaceholderText="Character" IsEditable="True" ItemsSource="{x:Bind Characters}"
                                      Width="160" Height="28" VerticalAlignment="Center" SelectedItem="{x:Bind CharacterName, Mode=TwoWay}" />
                            <Button Command="{x:Bind RemoveCommand}" IsEnabled="{x:Bind ParentHasMultipleDialogs, Mode=OneWay}"
                                    Height="28"
                                    ToolTipService.ToolTip="{x:Bind strings:Resources.EditorDeleteDialogue}">
                                <Button.Content>
                                    <FontIcon Foreground="{ThemeResource DestructiveActionForeground}" FontFamily="Segoe Fluent Icons"
                                              Glyph="&#xE107;" FontSize="14"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <local:BindableRichEditBox x:Name="Editor" PlaceholderText="{x:Bind strings:Resources.EditorPlaceholderText}"
                                               Height="180" CornerRadius="0,0,4,4"
                                               SelectionFlyout="{x:Null}" Tag="{Binding ElementName=EditorControls}"
                                               RtfText="{x:Bind RtfDialogueText, Mode=TwoWay}"
                                               IsFocused="{x:Bind IsActive, Mode=OneWay}"
                                               SelectionChanged="Selection_Changed"
                                               TextChanged="Selection_Changed"
                                               />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="DialogPromptTemplate" x:DataType="viewmodels:ReplyPromptViewModel">
            <Grid Style="{StaticResource CardGrid}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.9*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" TextWrapping="Wrap" AcceptsReturn="True" Margin="0,0,16,0"
                         Background="Transparent" BorderThickness="0" PlaceholderText="{x:Bind strings:Resources.EditorReplyPlaceholderText}"
                         Text="{x:Bind ReplyText, Mode=TwoWay}" />

                <StackPanel Orientation="Vertical" Grid.Column="1" Spacing="4">
                    <TextBlock Text="{x:Bind strings:Resources.EditorReplyLinkedTo}"/>
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <!-- Due to Bindings.Update in the codebehind, we can't precompile the LinkedID binding. -->
                        <ComboBox IsEditable="True" AllowDrop="True"
                                  DragOver="ComboBox_DragOver" Drop="ComboBox_Drop"
                                  SelectedItem="{Binding LinkedID, Mode=TwoWay}"
                                  ItemsSource="{x:Bind LinkableIDs, Mode=OneWay}"
                                  />
                        <Button ToolTipService.ToolTip="{x:Bind strings:Resources.EditorReplyGoToLinked}"
                                IsEnabled="{x:Bind HasLinkedID, Mode=OneWay}"
                                Command="{x:Bind GoToLinkedDialogueCommand}">
                            <Button.Content>
                                <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF716;" FontSize="18"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>

                    <Button Content="{x:Bind strings:Resources.ButtonDeleteText}" Margin="{StaticResource XSmallTopMargin}" Width="114"
                            ToolTipService.ToolTip="{x:Bind strings:Resources.EditorDeleteReply}"
                            Command="{x:Bind RemoveCommand}"/>

                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MetadataBoolTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl
                        Title="{x:Bind Name}">

                <local:SettingsBlockControl.Icon>
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF19F;" />
                </local:SettingsBlockControl.Icon>

                <local:SettingsBlockControl.SettingsActionableElement>
                    <ToggleSwitch IsOn="{x:Bind Value, Mode=TwoWay, Converter={StaticResource BoolMetadataConverter}}"
                                  OffContent="" OnContent="" Margin="0,0,-112,0"/>
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <DataTemplate x:Key="MetadataStringTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl 
                        Icon="Tag"
                        Title="{x:Bind Name}">

                <local:SettingsBlockControl.SettingsActionableElement>
                    <TextBox Width="180" Text="{x:Bind Value, Mode=TwoWay, Converter={StaticResource StringMetadataConverter}}"/>
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <DataTemplate x:Key="MetadataColorTemplate" x:DataType="viewmodels:MetadataViewModel">
            <local:SettingsBlockControl 
                        Title="{x:Bind Name}">

                <local:SettingsBlockControl.Icon>
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE790;" />
                </local:SettingsBlockControl.Icon>

                <local:SettingsBlockControl.SettingsActionableElement>
                    <controls:ColorPickerButton SelectedColor="{x:Bind Value, Mode=TwoWay, Converter={StaticResource ColorMetadataConverter}}"
                                                ColorPickerStyle="{StaticResource ColorPickerStyle}"
                                                CornerRadius="{ThemeResource ControlCornerRadius}"/>
                </local:SettingsBlockControl.SettingsActionableElement>

            </local:SettingsBlockControl>
        </DataTemplate>

        <views:MetadataTemplateSelector x:Key="MetadataTemplateSelector"
                                        MetadataBoolTemplate="{StaticResource MetadataBoolTemplate}"
                                        MetadataStringTemplate="{StaticResource MetadataStringTemplate}"
                                        MetadataColorTemplate="{StaticResource MetadataColorTemplate}"/>
    </Page.Resources>

    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="112" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="80"/>
        </Grid.ColumnDefinitions>

        <StackPanel Spacing="4" Margin="12,24,0,0" >

            <HyperlinkButton Margin="0,0,0,-8" ToolTipService.ToolTip="{x:Bind strings:Resources.EditorShowInTree}"
                             Command="{x:Bind ViewModel.ShowInTreeCommand}" >
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xEC0A;" FontSize="16"/>
                    <TextBlock Text="{x:Bind ViewModel.TreeTitle}"/>
                </StackPanel>
            </HyperlinkButton>

            <TextBox Text="{x:Bind ViewModel.NodeTitle, Mode=TwoWay}"
                     FontSize="32" FontWeight="SemiBold" Margin="{StaticResource MediumRightMargin}"
                     FontFamily="Segoe UI Variable Display" Background="Transparent" BorderThickness="0"/>
        </StackPanel>

        <AppBarButton IsCompact="True"
                      Grid.Row="0" Grid.Column="1" Margin="0,24,8,0">
            <AppBarButton.Icon>
                <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE10C;" FontSize="16"/>
            </AppBarButton.Icon>
            <AppBarButton.Flyout>
                <MenuFlyout>
                    <MenuFlyoutSubItem Text="{x:Bind strings:Resources.ContextMenuLinksTo}" Tag="links_to" x:Name="LinksToSubItem">
                        <MenuFlyoutSubItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xEA54;" />
                        </MenuFlyoutSubItem.Icon>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSubItem Text="{x:Bind strings:Resources.ContextMenuLinkedBy}" Tag="linked_by" x:Name="LinkedBySubItem">
                        <MenuFlyoutSubItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE11F;" />
                        </MenuFlyoutSubItem.Icon>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutItem Text="{x:Bind strings:Resources.ContextMenuPin}" Command="{x:Bind ViewModel.PinDialogueCommand}"
                                            Visibility="{x:Bind ViewModel.IsPinned, Converter={StaticResource ReverseBoolToVisibilityConverter}}"  >
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE141;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Text="{x:Bind strings:Resources.ContextMenuUnpin}" Command="{x:Bind ViewModel.UnpinDialogueCommand}"
                                            Visibility="{x:Bind ViewModel.IsPinned, Converter={StaticResource BoolToVisibilityConverter}}"  >
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE196;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Text="{x:Bind strings:Resources.ContextMenuTrash}" Command="{x:Bind ViewModel.MoveToTrashCommand}"
                                            Visibility="{x:Bind ViewModel.IsTrashed, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE107;" Foreground="{ThemeResource DestructiveActionForeground}" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Text="{x:Bind strings:Resources.ContextMenuDelete}" Command="{x:Bind ViewModel.DeleteCommand}"
                                            Visibility="{x:Bind ViewModel.IsTrashed, Converter={StaticResource BoolToVisibilityConverter}}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE621;" Foreground="{ThemeResource DestructiveActionForeground}"/>
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                </MenuFlyout>
            </AppBarButton.Flyout>

        </AppBarButton>

        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2">

            <StackPanel Spacing="8" Margin="{StaticResource MediumLeftRightMargin}">

                <controls:HeaderedContentControl
                                     HorizontalContentAlignment="Stretch"
                                     VerticalContentAlignment="Stretch"
                                     Margin="6">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal" Spacing="16" Margin="0,8">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                                       Text="{x:Bind strings:Resources.EditorHeaderDialogue}"/>
                            <Button Command="{x:Bind ViewModel.AddDialogCommand}"
                                    ToolTipService.ToolTip="{x:Bind strings:Resources.EditorAddDialogue}">
                                <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE109;" FontSize="16" />
                            </Button>
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <ListView ItemsSource="{x:Bind ViewModel.Dialogs}"
                    SelectionMode="None" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                    ItemTemplate="{StaticResource DialogPartTemplate}"/>

                </controls:HeaderedContentControl>

                <controls:HeaderedContentControl
                                     HorizontalContentAlignment="Stretch"
                                     VerticalContentAlignment="Stretch"
                                     Margin="6">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal" Spacing="12" Margin="0,8">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                                       Text="{x:Bind strings:Resources.EditorHeaderReply}"/>
                            <Button Command="{x:Bind ViewModel.AddPromptCommand}"
                                    ToolTipService.ToolTip="{x:Bind strings:Resources.EditorAddReply}">
                                <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE109;" FontSize="16" />
                            </Button>
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <Grid>
                        <ListView ItemsSource="{x:Bind ViewModel.Prompts}"
                    SelectionMode="None" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                    ItemTemplate="{StaticResource DialogPromptTemplate}"/>

                        <TextBlock Visibility="{x:Bind ViewModel.IsPromptsEmpty, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                   Text="{x:Bind strings:Resources.EditorEmptyReplies}" Margin="{StaticResource SmallTopBottomMargin}"
                                   TextWrapping="Wrap"/>
                    </Grid>

                </controls:HeaderedContentControl>

                <controls:HeaderedContentControl
                                     HorizontalContentAlignment="Stretch"
                                     VerticalContentAlignment="Stretch"
                                     Margin="6">
                    <controls:HeaderedContentControl.Header>
                        <StackPanel Orientation="Horizontal" Spacing="16" Margin="0,8">
                            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="{x:Bind strings:Resources.EditorHeaderMetadata}"/>
                        </StackPanel>
                    </controls:HeaderedContentControl.Header>

                    <Grid>
                        <ListView ItemsSource="{x:Bind ViewModel.MetaValues}" 
                                  SelectionMode="None" ItemContainerStyle="{StaticResource ListViewItemStretchStyle}"
                                  ItemTemplateSelector="{StaticResource MetadataTemplateSelector}"/>

                        <TextBlock Visibility="{x:Bind ViewModel.IsMetaDataEmpty, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                   Margin="{StaticResource SmallTopBottomMargin}" TextWrapping="Wrap" >
                            <Run Text="{x:Bind strings:Resources.EditorEmptyMetadata1}"/>
                            <Hyperlink>
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="Click">
                                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.OpenSettingsCommand}"></ic:InvokeCommandAction>
                                    </ic:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <Run Text="{x:Bind strings:Resources.NavigationSettings}"/>
                            </Hyperlink>
                            <Run Text="{x:Bind strings:Resources.EditorEmptyMetadata2}"/>
                        </TextBlock>
                    </Grid>

                </controls:HeaderedContentControl>

                <Border Height="64" />
            </StackPanel>

        </ScrollViewer>

    </Grid>
</Page>
